p {
  font-family: Arial;
}

h1 {
  color: maroon;
}

.title {
  color: teal;
}

.uppercase {
  text-transform: uppercase;
}
.publish-time {
  color: gray;
}

.cursive {
  font-family: cursive;
}

.capitalize {
  text-transform: capitalize;
}

h2.destination {
  font-family: cursive;
}

.description h5 {
  color: teal;
}

h5 {
  color: rebeccapurple !important;
}

h5, p {
  font-family: Georgia;
}

/* Multiple selectors can be chained together to select an element. This raises the specificity, but can be necessary.

Instead of writing a CSS style twice for two different selectors, we can separate the selectors by a comma to apply the same style to both.

One common way to keep our CSS concise is via proper utilization of “inheritance”. Within CSS, the computed values of many properties get inherited from ancestor elements. We can use this fact to reduce the number of declarations we write. For example, if I want most of the text on my page to be 20px I can declare font-size: 20px on the html selector. As <html> is the root element and the font-size property is inheritable, all text for this page will be 20px. In cases where we want to deviate from this 20px norm, we can use a selector with a higher specificty to target the element whose font-size we want to override. */
